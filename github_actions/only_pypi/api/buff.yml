name: SpaceONE Buff API

on:
  push:
    branches:
    - master
    paths:
    - 'proto/spaceone/api/**'
jobs:
  buff:
    if: github.repository_owner == 'spaceone-dev'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set environment virables
      env:
        SERVICE: api
        PYPI_UPLOAD: true # upload pypi if this is true
        # LOCATION points the parent directory
        LOCATION_SETUP_PY: dist/python # optional. for pypi upload
        LOCATION_VERSION: . # the location for VERSION file (ex- . means the location of VERSION is ./VERSION)
        IS_SUDO: true
      run: |
        echo "::set-env name=SERVICE::$SERVICE"
        echo "::set-env name=PYPI_UPLOAD::$PYPI_UPLOAD"
        echo "::set-env name=LOCATION_SETUP_PY::$LOCATION_SETUP_PY"
        echo "::set-env name=LOCATION_VERSION::$LOCATION_VERSION"
        echo "::set-env name=IS_SUDO::$IS_SUDO"
    - name: Clone master branch
      uses: actions/checkout@v2
      with:
        ref: master
        path: master_branch
    - name: Compare version
      run: |
        echo "MASTER BRANCH VERSION"
        cat master_branch/$LOCATION_VERSION/VERSION
        echo -e "\n\n"
        echo "PR VERSION"
        cat $LOCATION_VERSION/VERSION
        echo -e "\n\n"
        echo "::set-env name=IS_NEW_VERSION::false"
        cmp --silent master_branch/$LOCATION_VERSION/VERSION $LOCATION_VERSION/VERSION || \
        echo "::set-env name=IS_NEW_VERSION::true"
        echo "::set-env name=API_DOC_VERSION::$(cat $LOCATION_VERSION/VERSION)"
        echo "$(cat $LOCATION_VERSION/VERSION)-${{ github.run_id }}">$LOCATION_VERSION/VERSION
    - name: Update API doc Version
      run: |
          echo "$API_DOC_VERSION">$LOCATION_VERSION/VERSION
    - name: Create documents
      run: |
        make json
    - name: Commit files # transfer the new html files back into the repository
      run: |
        git config --local user.name "xellos00"
        git add ./artifact
        git commit -m "update artifact JSON with its current version"
    - name: Push changes # push the output folder to your repo
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true

    - name: Push to Api-doc # Copy artifact with version into API doc
      uses: andstor/copycat-action@v3
      with:
        personal_token: ${{ secrets.API_DOC_GITHUB_TOKEN }}
        src_path: artifact
        dst_path: /.
        dst_owner: spaceone-dev
        dst_repo_name: api-doc

    - name: Update auth on artifact
      run: |
        sudo chmod -R 777 artifact
    - name: Remove Artifact from Repo since its transfer has finished
      run: |
        git rm artifact -r -f
        git commit -m "Remove auto-generated artifact"
    - name: Push changes # push the output folder to your repo
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true