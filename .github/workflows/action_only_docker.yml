name: "[actions]only_docker"
on:
  workflow_dispatch:

jobs:

# docker/pypi : identity, inventory, monitoring, repository, statistics, secret, config, supervisor, plugin
# docker만 : console-assets, custom-report, console-api, console, power-scheduler
# pypi만 : api, python-core
  console:
    strategy:
      fail-fast: false
      matrix:
        target: ['console']
        branch: ['master']
    runs-on: ubuntu-latest
    steps:
      - name: set token
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: task
        env:
          target: ${{ matrix.target }}
        run: |
          git config --global user.email admin@spaceone.dev
          git config --global user.name admin-spaceone
          eval "$(ssh-agent -s)"
          cat <<EOF>id_rsa
          ${{secrets.ssh_key}}
          EOF
          chmod 400 ./id_rsa && ssh-add ./id_rsa
          git clone git@github.com:spaceone-dev/${{ env.target }}.git
          cd ${{ env.target }}
          git checkout ${{ matrix.branch }}
          cd ..
          rm -rf ${{ env.target }}/.github/workflows/*
          \cp -rf github_actions/common/workflows ${{ matrix.target }}/.github/
          \cp -f github_actions/only_docker/${{ matrix.target }}/* ${{ matrix.target }}/.github/workflows
          \cp -rf github_actions/helm_chart/workflows ${{ env.target }}/.github
          cd ${{ env.target }}
          git add . && git commit -m "[CI/CD] update github actions" && git push
  all_in_one_update_common:
    strategy:
      fail-fast: false
      matrix:
        target: ['console-assets', 'console-api', 'power-scheduler', 'project-site', 'spot-automation']
        branch: ['master']
    runs-on: ubuntu-latest
    steps:
      - name: set token
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: task
        env:
          target: ${{ matrix.target }}
        run: |
          git config --global user.email admin@spaceone.dev
          git config --global user.name admin-spaceone
          eval "$(ssh-agent -s)"
          cat <<EOF>id_rsa
          ${{secrets.ssh_key}}
          EOF
          chmod 400 ./id_rsa && ssh-add ./id_rsa
          git clone git@github.com:spaceone-dev/${{ env.target }}.git
          cd ${{ env.target }}
          git checkout ${{ matrix.branch }}
          cd ..
          rm -rf ${{ env.target }}/.github/workflows
          mkdir -p ${{ env.target }}/.github/workflows
          \cp -rf github_actions/common/workflows ${{ env.target }}/.github
          \cp -rf github_actions/only_docker/workflows ${{ env.target }}/.github
          \cp -rf github_actions/helm_chart/workflows ${{ env.target }}/.github
          cd ${{ env.target }}
          git add . && git commit -m "[CI/CD] update github actions" && git push
  no_master_push_update:
    strategy:
      fail-fast: false
      matrix:
        target: ['custom-report', 'cost-saving']
        branch: ['master']
    runs-on: ubuntu-latest
    steps:
      - name: set token
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: task
        run: |
          git config --global user.email admin@spaceone.dev
          git config --global user.name admin-spaceone
          eval "$(ssh-agent -s)"
          cat <<EOF>id_rsa
          ${{secrets.ssh_key}}
          EOF
          chmod 400 ./id_rsa && ssh-add ./id_rsa
          git clone git@github.com:spaceone-dev/${{ matrix.target }}.git
          cd ${{ matrix.target }}
          git checkout ${{ matrix.branch }}
          cd ..
          rm -rf ${{ matrix.target }}/.github/workflows/*
          \cp -rf github_actions/common/workflows ${{ matrix.target }}/.github/
          \cp -f github_actions/only_docker/${{ matrix.target }}/* ${{ matrix.target }}/.github/workflows
          rm -f ${{ matrix.target }}/.github/workflows/CI_master_push.yml
          cd ${{ matrix.target }}
          git add . && git commit -m "[CI/CD] update github actions" && git push
          cd ..

  notify_to_slack:
    if: github.repository_owner == 'cloudforet-io'
    needs: [all_in_one_update_common, no_master_push_update]
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
