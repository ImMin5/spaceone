name: "[release]make final temp" # console-asset과 custom-report는 제외
on:
  workflow_dispatch:
    inputs:
      tag:
        description: '`x.y.z` 형태로 버전을 입력해주세요. v접두사는 자동으로 첨가됩니다.'
        required: true
        default: 1.2.3

jobs:
  condition_check:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ !(${{ github.event.inputs.tag }} =~ ^[0-9]\.[0-9]?[0-9]\.[0-9]?[0-9]$) ]];
            then exit 1
          fi
          #  dispatch_make_final_release_base:
          #    strategy:
          #      fail-fast: false
          #      matrix:
          #        target: ['api', 'python-core']
          #    needs: condition_check
          #    runs-on: ubuntu-latest
          #    continue-on-error: true
          #    env:
          #      TAG: v${{ github.event.inputs.tag }}
          #    steps:
          #      - name: dispatch
          #        uses: peter-evans/repository-dispatch@v1
          #        with:
          #          token: ${{ secrets.PAT_TOKEN }}
          #          repository: spaceone-dev/${{ matrix.target }}
          #          event-type: branch_tagging
          #          client-payload: '{"version": "${{ env.TAG }}"}'
  dispatch_make_final_release_svc:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        target: ['console', 'console-api', 'console-assets', 'marketplace-assets', 'identity', 'secret', 'repository', 'plugin', 'config', 'inventory', 'monitoring', 'statistics', 'billing', 'power-scheduler', 'cost-saving', 'spot-automation', 'supervisor', 'spacectl', 'tester', 'spaceone-initializer']
        #needs: dispatch_make_final_release_base
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: check upload
        run: |
          apt update && apt install jq -y
          export check=0
          while [ $check -eq '0' ];
          do
            echo "waiting"
            if [ $(curl -s https://pypi.org/pypi/spaceone-core/json | jq -r '.releases | keys[]' | sort -V | grep ${{ env.TAG }} | grep -v rc | grep -v dev | tail -1) == "${{ env.TAG }}" ] && [ $(curl -s https://pypi.org/pypi/spaceone-api/json | jq -r '.releases | keys[]' | sort -V | grep ${{ env.TAG }} | grep -v rc | grep -v dev | tail -1) == "${{ env.TAG }}" ];
              then export check=1
            fi
            sleep 1
          done
      - name: dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: spaceone-dev/${{ matrix.target }}
          event-type: branch_tagging
          client-payload: '{"version": "v${{ env.TAG }}"}'
  
    
# docker/pypi : identity, inventory, monitoring, repository, statistics, secret, config, supervisor, plugin
# docker만 : console-assets, custom-report, console-api, console
# pypi만 : api, python-core

  notify_to_slack:
    if: github.repository_owner == 'cloudforet-io'
    needs: [dispatch_make_final_release_svc]
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
