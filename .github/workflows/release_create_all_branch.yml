name: "[release]create all release branch"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: '`x.y.z` 형태로 버전을 입력해주세요. v접두사와 -rc0 접미사는 자동으로 첨가됩니다.'
        required: true
        default: 1.2.3

jobs:
  condition_check:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ !(${{ github.event.inputs.tag }} =~ ^[0-9]\.[0-9]?[0-9]\.[0-9]?[0-9]$) ]];
            then exit 1
          fi
  dispatch_create_workflow_base:
    strategy:
      fail-fast: false
      matrix:
        target: ['api', 'python-core']
    needs: condition_check
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: task
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: cloudforet-io/${{ matrix.target }}
          event-type: create_release_branch
          client-payload: '{"version": "${{ env.TAG }}"}'

  # Lack of concurrent job, make serial task
  dispatch_create_workflow_svc_1:
    strategy:
      fail-fast: false
      matrix:
        target: ['console', 'console-api', 'console-assets', 'marketplace-assets', 'console-api-v2']
    needs: dispatch_create_workflow_base
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: check upload
        run: |
          apt update && apt install jq -y
          export check=0
          while [ $check -eq '0' ];
          do
            echo "waiting"
            if [ $(curl -s https://pypi.org/pypi/spaceone-core/json | jq -r '.releases | keys[]' | grep ${{ env.TAG }}rc1 | tail -1) == "${{ env.TAG }}rc1" ] && [ $(curl -s https://pypi.org/pypi/spaceone-api/json | jq -r '.releases | keys[]' | grep ${{ env.TAG }}rc1 | tail -1) == "${{ env.TAG }}rc1" ];
              then export check=1
            fi
            sleep 1
          done
      - name: task
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: cloudforet-io/${{ matrix.target }}
          event-type: create_release_branch
          client-payload: '{"version": "${{ env.TAG }}"}' 
  
  dispatch_create_workflow_svc_2:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        target: ['identity', 'secret', 'repository', 'plugin', 'config', 'inventory', 'monitoring', 'statistics', 'cost-analysis', 'notification', 'board', 'file-manager', 'dashboard']
    needs: dispatch_create_workflow_svc_1
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: check upload
        run: |
          apt update && apt install jq -y
          export check=0
          while [ $check -eq '0' ];
          do
            echo "waiting"
            if [ $(curl -s https://pypi.org/pypi/spaceone-core/json | jq -r '.releases | keys[]' | grep ${{ env.TAG }}rc1 | tail -1) == "${{ env.TAG }}rc1" ] && [ $(curl -s https://pypi.org/pypi/spaceone-api/json | jq -r '.releases | keys[]' | grep ${{ env.TAG }}rc1 | tail -1) == "${{ env.TAG }}rc1" ];
              then export check=1
            fi
            sleep 1
          done
      - name: task
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: cloudforet-io/${{ matrix.target }}
          event-type: create_release_branch
          client-payload: '{"version": "${{ env.TAG }}"}' 
 
  dispatch_create_workflow_svc_3:
    strategy:
      fail-fast: false
      matrix:
        target: ['supervisor', 'spacectl', 'tester', 'spaceone-initializer']
    needs: dispatch_create_workflow_svc_2
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: check upload
        run: |
          apt update && apt install jq -y
          export check=0
          while [ $check -eq '0' ];
          do
            echo "waiting"
            if [ $(curl -s https://pypi.org/pypi/spaceone-core/json | jq -r '.releases | keys[]' | grep ${{ env.TAG }}rc1 | tail -1) == "${{ env.TAG }}rc1" ] && [ $(curl -s https://pypi.org/pypi/spaceone-api/json | jq -r '.releases | keys[]' | grep ${{ env.TAG }}rc1 | tail -1) == "${{ env.TAG }}rc1" ];
              then export check=1
            fi
            sleep 1
          done
      - name: task
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: cloudforet-io/${{ matrix.target }}
          event-type: create_release_branch
          client-payload: '{"version": "${{ env.TAG }}"}' 
    
# docker/pypi : identity, inventory, monitoring, repository, statistics, secret, config, supervisor, plugin
# docker만 : console-assets, custom-report, console-api, console
# pypi만 : api, python-core

  notify_to_slack:
    if: github.repository_owner == 'cloudforet-io'
    needs: [dispatch_create_workflow_svc_3]
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
